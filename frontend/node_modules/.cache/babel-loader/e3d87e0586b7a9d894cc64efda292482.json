{"ast":null,"code":"var _jsxFileName = \"/Users/jamie/Desktop/TOC-new-features/frontend/src/Pages/Compare.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"../css/RecipeList.scss\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Compare = props => {\n  _s();\n\n  const [brandChoice, setBrandChoice] = useState('');\n  useEffect(() => {\n    axios.get(`https://api.spoonacular.com/food/products/search?apiKey=648c0fa98bff450295c089d1a791f846&query=${brandChoice}`).then(res => {\n      console.log('respose', res);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [br]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"compare\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Not only do none of our recipe's exclude the Big-8 \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 62\n      }, this), \"but we also don't add any sugar or salt to our products.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Can your go-to brands say the same?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Click one of these popular brands to check.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      onClick: setBrandChoice('Gerber'),\n      children: \"Gerber\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      onClick: setBrandChoice('Beech Nut Baby Food'),\n      children: \"Beech Nut\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 55\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      onClick: setBrandChoice('Plum'),\n      children: \"Plum\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 119\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      onClick: setBrandChoice('Earths Best Baby Foods'),\n      children: \"Earth's Best Baby Foods\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 163\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Compare, \"wLrlnruS8nyROmCNH1LnlHkkSjI=\");\n\n_c = Compare;\nexport default Compare;\n\nvar _c;\n\n$RefreshReg$(_c, \"Compare\");","map":{"version":3,"sources":["/Users/jamie/Desktop/TOC-new-features/frontend/src/Pages/Compare.js"],"names":["React","useState","useEffect","axios","Compare","props","brandChoice","setBrandChoice","get","then","res","console","log","catch","err","br"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,wBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,KAAK,CAACK,GAAN,CAAW,kGAAiGF,WAAY,EAAxH,EACGG,IADH,CACQC,GAAG,IAAI;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,GAAvB;AACD,KAHH,EAIGG,KAJH,CAISC,GAAG,IAAI;AACZH,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACD,KANH;AAQD,GATQ,EASN,CAACC,EAAD,CATM,CAAT;AAWA,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACE;AAAA,qFAAuD;AAAA;AAAA;AAAA;AAAA,cAAvD;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAG,MAAA,OAAO,EAAER,cAAc,CAAC,QAAD,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAIkD;AAAG,MAAA,OAAO,EAAEA,cAAc,CAAC,qBAAD,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJlD,eAIkH;AAAG,MAAA,OAAO,EAAEA,cAAc,CAAC,MAAD,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJlH,eAI8J;AAAG,MAAA,OAAO,EAAEA,cAAc,CAAC,wBAAD,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJ9J;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAvBD;;GAAMH,O;;KAAAA,O;AAyBN,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../css/RecipeList.scss\";\nimport axios from \"axios\";\n\nconst Compare = (props) => {\n  const [brandChoice, setBrandChoice] = useState('');\n\n  useEffect(() => {\n    axios.get(`https://api.spoonacular.com/food/products/search?apiKey=648c0fa98bff450295c089d1a791f846&query=${brandChoice}`)\n      .then(res => {\n        console.log('respose', res)\n      })\n      .catch(err => {\n        console.log(err)\n      })\n\n  }, [br])\n\n  return (\n    <div className=\"compare\">\n      <h3>Not only do none of our recipe's exclude the Big-8 <br/>but we also don't add any sugar or salt to our products.</h3>\n      <p>Can your go-to brands say the same?</p>\n      <p>Click one of these popular brands to check.</p>\n      <p onClick={setBrandChoice('Gerber')}>Gerber</p><p onClick={setBrandChoice('Beech Nut Baby Food')}>Beech Nut</p><p onClick={setBrandChoice('Plum')}>Plum</p><p onClick={setBrandChoice('Earths Best Baby Foods')}>Earth's Best Baby Foods</p>\n     \n    </div>\n  );\n};\n\nexport default Compare;\n"]},"metadata":{},"sourceType":"module"}