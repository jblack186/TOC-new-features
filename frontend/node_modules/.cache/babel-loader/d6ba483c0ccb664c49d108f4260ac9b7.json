{"ast":null,"code":"var _jsxFileName = \"/Users/jamie/Desktop/TOC-new-features/frontend/src/components/Modal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport '../css/Modal.scss';\nimport axios from \"axios\";\nimport mockData from \"../brandJSON\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Modal(props) {\n  _s();\n\n  const [sodium, setSodium] = useState();\n  const [sugar, setSugar] = useState();\n  const [brandItem, setBrandItem] = useState();\n  useEffect(() => {\n    axios.get('');\n    const timer = setTimeout(() => {\n      console.log('This will run after 1 second!');\n    }, 1000);\n    setBrandItem(mockData.ingredients.find(item => {\n      return item.id = props.getId;\n    }));\n  }, []);\n  console.log('brand', brandItem);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: [mockData.ingredients.find(item => {\n        return item.id = props.getId;\n      }), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Sodium: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Sugar: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Modal, \"yxGYW6nWdRujWXvWGnMf1gMyuMk=\");\n\n_c = Modal;\nexport default Modal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"sources":["/Users/jamie/Desktop/TOC-new-features/frontend/src/components/Modal.js"],"names":["React","useState","useEffect","axios","mockData","Modal","props","sodium","setSodium","sugar","setSugar","brandItem","setBrandItem","get","timer","setTimeout","console","log","ingredients","find","item","id","getId"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAO,mBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,cAArB;;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AACpB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,EAApC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,EAAlC;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,EAA1C;AAIAC,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,KAAK,CAACU,GAAN,CAAU,EAAV;AACA,UAAMC,KAAK,GAAGC,UAAU,CAAC,MAAM;AAC7BC,MAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACD,KAFuB,EAErB,IAFqB,CAAxB;AAGAL,IAAAA,YAAY,CAACR,QAAQ,CAACc,WAAT,CAAqBC,IAArB,CAA0BC,IAAI,IAAI;AAE7C,aAAQA,IAAI,CAACC,EAAL,GAAUf,KAAK,CAACgB,KAAxB;AACD,KAHY,CAAD,CAAZ;AAKD,GAVQ,EAUN,EAVM,CAAT;AAYAN,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBN,SAArB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,iBACCP,QAAQ,CAACc,WAAT,CAAqBC,IAArB,CAA0BC,IAAI,IAAI;AACnC,eAAQA,IAAI,CAACC,EAAL,GAAUf,KAAK,CAACgB,KAAxB;AACD,OAFE,CADD,eAIJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJI,eAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GAhCQjB,K;;KAAAA,K;AAkCT,eAAeA,KAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport '../css/Modal.scss';\nimport axios from \"axios\";\nimport mockData from \"../brandJSON\";\n\nfunction Modal(props) {\n  const [sodium, setSodium] = useState()\n  const [sugar, setSugar] = useState()\n  const [brandItem, setBrandItem] = useState()\n\n\n\n  useEffect(() => {\n    axios.get('')\n    const timer = setTimeout(() => {\n      console.log('This will run after 1 second!')\n    }, 1000);\n    setBrandItem(mockData.ingredients.find(item => {\n      \n      return (item.id = props.getId)\n    }))\n\n  }, [])\n\n  console.log('brand', brandItem)\n\n  return (\n    <div className=\"modal-container\">\n      <div className=\"modal\">\n      {mockData.ingredients.find(item => {\n      return (item.id = props.getId)\n    })}\n  <p>Sodium: {}</p>\n      <p>Sugar: </p>\n      </div>\n    </div>\n  )\n}\n\nexport default Modal;"]},"metadata":{},"sourceType":"module"}