{"ast":null,"code":"var _jsxFileName = \"/Users/jamie/Desktop/TOC-new-features/frontend/src/Pages/Compare.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"../css/Compare.scss\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Compare = () => {\n  _s();\n\n  const [brandChoice, setBrandChoice] = useState('');\n  useEffect(() => {}, [brandChoice]);\n\n  function babyBrand(e) {\n    setBrandChoice(e.target.value);\n    axios.get(`https://api.spoonacular.com/food/products/search?apiKey=648c0fa98bff450295c089d1a791f846&query=${brandChoice}`).then(res => {\n      console.log('respose', res);\n    }).catch(err => {\n      console.log('err', err);\n    });\n  }\n\n  console.log(brandChoice);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"compare\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Not only do none of our recipe's exclude the Big-8 \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 62\n      }, this), \"but we also don't add any sugar or salt to our products.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Can your go-to brands say the same?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Click one of these popular brands to check.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: babyBrand,\n      value: \"Gerber\",\n      children: \"Gerber\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: babyBrand,\n      value: \"Beech Nut Baby Food\",\n      children: \"Beech Nut\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: babyBrand,\n      value: \"Plum\",\n      children: \"Plum\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: babyBrand,\n      value: \"Earths Best Baby Foods\",\n      children: \"Earth's Best Baby Foods\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Compare, \"wLrlnruS8nyROmCNH1LnlHkkSjI=\");\n\n_c = Compare;\nexport default Compare;\n\nvar _c;\n\n$RefreshReg$(_c, \"Compare\");","map":{"version":3,"sources":["/Users/jamie/Desktop/TOC-new-features/frontend/src/Pages/Compare.js"],"names":["React","useState","useEffect","axios","Compare","brandChoice","setBrandChoice","babyBrand","e","target","value","get","then","res","console","log","catch","err"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,qBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,EAAD,CAA9C;AAEAC,EAAAA,SAAS,CAAC,MAAM,CACf,CADQ,EACN,CAACG,WAAD,CADM,CAAT;;AAGA,WAASE,SAAT,CAAmBC,CAAnB,EAAsB;AACpBF,IAAAA,cAAc,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACAP,IAAAA,KAAK,CAACQ,GAAN,CAAW,kGAAiGN,WAAY,EAAxH,EACCO,IADD,CACMC,GAAG,IAAI;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,GAAvB;AACD,KAHD,EAICG,KAJD,CAIOC,GAAG,IAAI;AACZH,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAkBE,GAAlB;AACD,KAND;AASD;;AAEDH,EAAAA,OAAO,CAACC,GAAR,CAAYV,WAAZ;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACE;AAAA,qFAAuD;AAAA;AAAA;AAAA;AAAA,cAAvD;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAQ,MAAA,OAAO,EAAEE,SAAjB;AAA4B,MAAA,KAAK,EAAC,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAQ,MAAA,OAAO,EAAEA,SAAjB;AAA4B,MAAA,KAAK,EAAC,qBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAQ,MAAA,OAAO,EAAEA,SAAjB;AAA4B,MAAA,KAAK,EAAC,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAOE;AAAQ,MAAA,OAAO,EAAEA,SAAjB;AAA4B,MAAA,KAAK,EAAC,wBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAhCD;;GAAMH,O;;KAAAA,O;AAkCN,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../css/Compare.scss\";\nimport axios from \"axios\";\n\nconst Compare = () => {\n  const [brandChoice, setBrandChoice] = useState('');\n\n  useEffect(() => {\n  }, [brandChoice])\n\n  function babyBrand(e) {\n    setBrandChoice(e.target.value)\n    axios.get(`https://api.spoonacular.com/food/products/search?apiKey=648c0fa98bff450295c089d1a791f846&query=${brandChoice}`)\n    .then(res => {\n      console.log('respose', res)\n    })\n    .catch(err => {\n      console.log('err',err)\n    })\n\n\n  }\n\n  console.log(brandChoice)\n  return (\n    <div className=\"compare\">\n      <h3>Not only do none of our recipe's exclude the Big-8 <br/>but we also don't add any sugar or salt to our products.</h3>\n      <p>Can your go-to brands say the same?</p>\n      <p>Click one of these popular brands to check.</p>\n      <button onClick={babyBrand} value='Gerber'>Gerber</button>\n      <button onClick={babyBrand} value='Beech Nut Baby Food'>Beech Nut</button>\n      <button onClick={babyBrand} value='Plum'>Plum</button>\n      <button onClick={babyBrand} value='Earths Best Baby Foods'>Earth's Best Baby Foods</button>\n     \n    </div>\n  );\n};\n\nexport default Compare;\n"]},"metadata":{},"sourceType":"module"}