{"ast":null,"code":"var _jsxFileName = \"/Users/jamie/Desktop/TOC-new-features/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { Route, useHistory } from \"react-router-dom\";\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"./components/Header\";\nimport Announcebar from \"./components/Announcebar\";\nimport RecipeForm from \"./components/RecipeForm\";\nimport RecipeFCorm from \"./components/Compare\";\nimport RecipeList from \"./components/RecipeList\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [recipes, setRecipes] = useState([]);\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [childFirstName, setChildFirstName] = useState(\"\");\n  const [childLastName, setChildLastName] = useState(\"\");\n  const [allergies, setAllergies] = useState([]);\n  const [allergenList, setAllergenList] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [tempAllergies, setTempAllergies] = useState([\"milk\"]);\n  const history = useHistory();\n\n  const getAllergies = () => {\n    axios.get(\"https://60f5adf918254c00176dffc8.mockapi.io/api/v1/allergens/\").then(res => {\n      res.data.forEach(item => {\n        setAllergenList(allergenList => [...allergenList, /*#__PURE__*/_jsxDEV(\"option\", {\n          value: item.name,\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)]);\n      });\n    });\n  };\n\n  useEffect(() => {\n    getAllergies();\n  }, []);\n\n  const getRecipes = () => {\n    axios.get(\"https://60f5adf918254c00176dffc8.mockapi.io/api/v1/recipes/\").then(res => {\n      setRecipes(res.data);\n    });\n  };\n\n  const sendRecipes = () => {\n    axios.post(\"/api/recipes-list/\", {\n      recipes: recipes\n    }).then(res => {\n      console.log(res);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  useEffect(() => {\n    getRecipes();\n  }, []);\n\n  const handleSubmit = async event => {\n    event.preventDefault(); // sendRecipes();\n\n    let newCustomer = {\n      first_name: firstName,\n      last_name: lastName,\n      email: email,\n      child_first_name: childFirstName,\n      child_last_name: childLastName,\n      allergies: allergies.join(\",\")\n    };\n    await axios.post(\"/api/customers/\", newCustomer).then(res => {\n      history.push(\"/recipes\");\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const newCustomerForm = /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form__content__form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"*First Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"first name\",\n        type: \"name\",\n        value: firstName,\n        onChange: e => setFirstName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"*Last Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"last name\",\n        type: \"name\",\n        value: lastName,\n        onChange: e => setLastName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"*Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"email\",\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"*Child First Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"child first name\",\n        type: \"name\",\n        value: childFirstName,\n        onChange: e => setChildFirstName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"*Child Last Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"child last name\",\n        type: \"name\",\n        value: childLastName,\n        onChange: e => setChildLastName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"What allergies does your child have?\", /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => {\n          return setAllergies(allergies => [...allergies, e.target.value]);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"none\",\n          selected: true,\n          disabled: true,\n          hidden: true,\n          children: \"Select an Option\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), allergenList]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Show Recipes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this); // checking selected allergens on filter\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"container__header\",\n      children: [/*#__PURE__*/_jsxDEV(Announcebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/\",\n      render: props => {\n        return /*#__PURE__*/_jsxDEV(RecipeForm, {\n          handleSubmit: handleSubmit,\n          firstName: firstName,\n          lastName: lastName,\n          email: email,\n          childFirstName: childFirstName,\n          childLastName: childLastName,\n          allergies: allergies,\n          allergenList: setAllergenList,\n          newCustomerForm: newCustomerForm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/recipes\",\n      render: props => {\n        return /*#__PURE__*/_jsxDEV(RecipeList, {\n          recipes: recipes,\n          allergies: allergies\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 18\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/compare\",\n      render: props => {\n        return /*#__PURE__*/_jsxDEV(Compare, {\n          recipes: recipes,\n          allergies: allergies\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 18\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"YEwkY1OCrkg2/QxmG59yjdzi3ag=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jamie/Desktop/TOC-new-features/frontend/src/App.js"],"names":["Route","useHistory","React","useState","useEffect","Header","Announcebar","RecipeForm","RecipeFCorm","RecipeList","axios","Link","App","recipes","setRecipes","firstName","setFirstName","lastName","setLastName","email","setEmail","childFirstName","setChildFirstName","childLastName","setChildLastName","allergies","setAllergies","allergenList","setAllergenList","isLoading","setIsLoading","tempAllergies","setTempAllergies","history","getAllergies","get","then","res","data","forEach","item","name","getRecipes","sendRecipes","post","console","log","catch","err","handleSubmit","event","preventDefault","newCustomer","first_name","last_name","child_first_name","child_last_name","join","push","newCustomerForm","e","target","value","props"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport { Route, useHistory } from \"react-router-dom\";\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"./components/Header\";\nimport Announcebar from \"./components/Announcebar\";\nimport RecipeForm from \"./components/RecipeForm\";\nimport RecipeFCorm from \"./components/Compare\";\nimport RecipeList from \"./components/RecipeList\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nfunction App() {\n  const [recipes, setRecipes] = useState([]);\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [childFirstName, setChildFirstName] = useState(\"\");\n  const [childLastName, setChildLastName] = useState(\"\");\n  const [allergies, setAllergies] = useState([]);\n  const [allergenList, setAllergenList] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [tempAllergies, setTempAllergies] = useState([\"milk\"]);\n\n  const history = useHistory();\n\n  const getAllergies = () => {\n    axios\n      .get(\"https://60f5adf918254c00176dffc8.mockapi.io/api/v1/allergens/\")\n      .then((res) => {\n        res.data.forEach((item) => {\n          setAllergenList((allergenList) => [\n            ...allergenList,\n            <option value={item.name}>{item.name}</option>,\n          ]);\n        });\n      });\n  };\n\n  useEffect(() => {\n    getAllergies();\n  }, []);\n\n  const getRecipes = () => {\n    axios\n      .get(\"https://60f5adf918254c00176dffc8.mockapi.io/api/v1/recipes/\")\n      .then((res) => {\n        setRecipes(res.data);\n      });\n  };\n  const sendRecipes = () => {\n    axios\n      .post(\"/api/recipes-list/\", { recipes: recipes })\n      .then((res) => {\n        console.log(res);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  useEffect(() => {\n    getRecipes();\n  }, []);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    // sendRecipes();\n    let newCustomer = {\n      first_name: firstName,\n      last_name: lastName,\n      email: email,\n      child_first_name: childFirstName,\n      child_last_name: childLastName,\n      allergies: allergies.join(\",\"),\n    };\n    await axios\n      .post(\"/api/customers/\", newCustomer)\n      .then((res) => {\n        history.push(\"/recipes\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const newCustomerForm = (\n    <form className=\"form__content__form\" onSubmit={handleSubmit}>\n      <label>\n        *First Name\n        <input\n          name=\"first name\"\n          type=\"name\"\n          value={firstName}\n          onChange={(e) => setFirstName(e.target.value)}\n          required\n        />\n      </label>\n\n      <label>\n        *Last Name\n        <input\n          name=\"last name\"\n          type=\"name\"\n          value={lastName}\n          onChange={(e) => setLastName(e.target.value)}\n          required\n        />\n      </label>\n      <label>\n        *Email\n        <input\n          name=\"email\"\n          type=\"email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          required\n        />\n      </label>\n\n      <label>\n        *Child First Name\n        <input\n          name=\"child first name\"\n          type=\"name\"\n          value={childFirstName}\n          onChange={(e) => setChildFirstName(e.target.value)}\n          required\n        />\n      </label>\n      <label>\n        *Child Last Name\n        <input\n          name=\"child last name\"\n          type=\"name\"\n          value={childLastName}\n          onChange={(e) => setChildLastName(e.target.value)}\n          required\n        />\n      </label>\n      <label>\n        What allergies does your child have?\n        <select\n          onChange={(e) => {\n            return setAllergies((allergies) => [...allergies, e.target.value]);\n          }}\n        >\n          <option value=\"none\" selected disabled hidden>\n            Select an Option\n          </option>\n          {allergenList}\n        </select>\n      </label>\n      <button type=\"submit\">Show Recipes</button>\n    </form>\n  );\n\n  // checking selected allergens on filter\n\n  return (\n    <div className=\"container\">\n      <header className=\"container__header\">\n        <Announcebar />\n        <Header />\n      </header>\n      <Route\n        exact\n        path=\"/\"\n        render={(props) => {\n          return (\n            <RecipeForm\n              handleSubmit={handleSubmit}\n              firstName={firstName}\n              lastName={lastName}\n              email={email}\n              childFirstName={childFirstName}\n              childLastName={childLastName}\n              allergies={allergies}\n              allergenList={setAllergenList}\n              newCustomerForm={newCustomerForm}\n            />\n          );\n        }}\n      />\n      <Route\n        exact\n        path=\"/recipes\"\n        render={(props) => {\n          return <RecipeList recipes={recipes} allergies={allergies} />;\n        }}\n      />\n            <Route\n        exact\n        path=\"/compare\"\n        render={(props) => {\n          return <Compare recipes={recipes} allergies={allergies} />;\n        }}\n      />\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}